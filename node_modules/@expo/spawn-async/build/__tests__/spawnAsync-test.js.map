{"version":3,"file":"spawnAsync-test.js","sourceRoot":"","sources":["../../src/__tests__/spawnAsync-test.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\n\nimport spawnAsync from '../spawnAsync';\n\ndescribe('spawnAsync', () => {\n  it(`receives output from completed processes`, async () => {\n    let result = await spawnAsync('echo', ['hi']);\n    expect(typeof result.pid).toBe('number');\n    expect(result.stdout).toBe('hi\\n');\n    expect(result.stderr).toBe('');\n\n    expect(result.output[0]).toBe(result.stdout);\n    expect(result.output[1]).toBe(result.stderr);\n\n    expect(result.status).toBe(0);\n    expect(result.signal).toBe(null);\n  });\n\n  it(`throws errors when processes return non-zero exit codes`, async () => {\n    let didThrow = false;\n    try {\n      await spawnAsync('false');\n    } catch (e) {\n      didThrow = true;\n      expect(typeof e.pid).toBe('number');\n      expect(e.status).toBe(1);\n      expect(e.signal).toBe(null);\n    }\n    expect(didThrow).toBe(true);\n  });\n\n  // NOTE: in a breaking change, signals should probably be treated like non-zero exit codes\n  it(`returns when processes are killed with signals`, async () => {\n    let result = await spawnAsync(path.join(__dirname, 'signal-self.sh'));\n    expect(typeof result.pid).toBe('number');\n    expect(result.status).toBe(null);\n    expect(result.signal).toBe('SIGKILL');\n  });\n\n  it(`throws errors when processes don't exist`, async () => {\n    let didThrow = false;\n    try {\n      await spawnAsync('nonexistent-program');\n    } catch (e) {\n      didThrow = true;\n      expect(e.pid).not.toBeDefined();\n      expect(e.code).toBe('ENOENT');\n      expect(e.status).toBe(null);\n      expect(e.signal).toBe(null);\n    }\n    expect(didThrow).toBe(true);\n  });\n});\n"]}