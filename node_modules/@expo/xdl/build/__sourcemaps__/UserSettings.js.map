{"version":3,"sources":["UserSettings.js"],"names":["SETTINGS_FILE_NAME","userSettingsFile","let","dir","dotExpoHomeDirectory","file","path","join","oldFile","fs","statSync","isFile","renameSync","e","userSettingsJsonFile","JsonFile","jsonParseErrorDefault","cantReadFileDefault","recentExpsJsonFile","mkdirped","dirPath","process","env","__UNSAFE_EXPO_HOME_DIRECTORY","home","Env","Error","EXPO_STAGING","EXPO_LOCAL","oldDirPath","isDirectory","mkdirpSync","async","anonymousIdentifier","settings","await","id","getAsync","uuid","v4","setAsync","UserSettings","any","Object","assign"],"mappings":"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","file":"../UserSettings.js","sourcesContent":["/**\n * @flow\n */\n\nimport fs from 'fs-extra';\nimport uuid from 'uuid';\nimport JsonFile from '@expo/json-file';\n\nimport path from 'path';\n\nimport * as Env from './Env';\n\nconst SETTINGS_FILE_NAME = 'state.json';\n\nfunction userSettingsFile() {\n  let dir = dotExpoHomeDirectory();\n  let file = path.join(dir, SETTINGS_FILE_NAME);\n  try {\n    // move exponent.json to state.json\n    let oldFile = path.join(dir, 'exponent.json');\n    if (fs.statSync(oldFile).isFile()) {\n      fs.renameSync(oldFile, file);\n    }\n  } catch (e) {\n    // no old directory, continue\n  }\n  return file;\n}\n\nfunction userSettingsJsonFile() {\n  return new JsonFile(userSettingsFile(), {\n    jsonParseErrorDefault: {},\n    cantReadFileDefault: {},\n  });\n}\n\nfunction recentExpsJsonFile() {\n  return new JsonFile(path.join(dotExpoHomeDirectory(), 'xde-recent-exps.json'), {\n    jsonParseErrorDefault: [],\n    cantReadFileDefault: [],\n  });\n}\n\nvar mkdirped = false;\nfunction dotExpoHomeDirectory() {\n  let dirPath;\n  if (process.env.__UNSAFE_EXPO_HOME_DIRECTORY) {\n    dirPath = process.env.__UNSAFE_EXPO_HOME_DIRECTORY;\n  } else {\n    const home = Env.home();\n    if (!home) {\n      throw new Error(\n        \"Can't determine your home directory; make sure your $HOME environment variable is set.\"\n      );\n    }\n\n    if (process.env.EXPO_STAGING) {\n      dirPath = path.join(home, '.expo-staging');\n    } else if (process.env.EXPO_LOCAL) {\n      dirPath = path.join(home, '.expo-local');\n    } else {\n      dirPath = path.join(home, '.expo');\n    }\n\n    try {\n      // move .exponent to .expo\n      let oldDirPath = path.join(home, '.exponent');\n      if (fs.statSync(oldDirPath).isDirectory()) {\n        fs.renameSync(oldDirPath, dirPath);\n      }\n    } catch (e) {\n      // no old directory, continue\n    }\n  }\n  if (!mkdirped) {\n    fs.mkdirpSync(dirPath);\n    mkdirped = true;\n  }\n  return dirPath;\n}\n\n// returns an anonymous, unique identifier for a user on the current computer\nasync function anonymousIdentifier(): Promise<string> {\n  const settings = await userSettingsJsonFile();\n  let id = await settings.getAsync('uuid', null);\n\n  if (!id) {\n    id = uuid.v4();\n    await settings.setAsync('uuid', id);\n  }\n\n  return id;\n}\n\nconst UserSettings: any = userSettingsJsonFile();\n\nObject.assign(UserSettings, {\n  dotExpoHomeDirectory,\n  recentExpsJsonFile,\n  userSettingsFile,\n  userSettingsJsonFile,\n  anonymousIdentifier,\n  SETTINGS_FILE_NAME,\n});\n\nexport default UserSettings;\n"],"sourceRoot":"/@expo/xdl@54.1.5/src"}