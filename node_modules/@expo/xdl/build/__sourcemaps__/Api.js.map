{"version":3,"sources":["Api.js"],"names":["MAX_CONTENT_LENGTH","TIMER_DURATION","TIMEOUT","ApiError","code","message","let","err","Error","_isApiError","_rootBaseUrl","Config","api","scheme","host","_apiBaseUrl","rootBaseUrl","port","async","_callMethodAsync","url","method","requestBody","requestOptions","returnEntireResponse","clientId","await","Session","clientIdAsync","session","UserManager","getSessionAsync","skipValidationToken","process","env","headers","any","sessionSecret","options","maxContentLength","data","formData","convertedFormData","_convertFormDataToBuffer","getHeaders","response","axios","request","responseBody","responseObj","_","isString","JSON","parse","e","XDLError","serverError","Promise","resolve","pipe","concat","encoding","_downloadAsync","outputPath","progressFunction","retryFunction","promptShown","currentProgress","cancel","token","CancelToken","source","warningTimer","setTimeout","tmpPath","config","timeout","responseType","cancelToken","totalDownloadSize","downloadProgress","on","chunk","length","roundedProgress","Math","floor","clearTimeout","fs","createWriteStream","rename","ApiClient","static","callMethodAsync","methodName","args","Object","boolean","encodeURIComponent","stringify","callPathAsync","path","xdlSchemaAsync","sdkVersion","_schemaCaches","hasOwnProperty","Cacher","join","__dirname","getAsync","downloadAsync","extract","dotExpoHomeDirectory","UserSettings","Extract","extractAsync","rimraf","sync"],"mappings":"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","file":"../Api.js","sourcesContent":["/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport fs from 'fs-extra';\nimport rimraf from 'rimraf';\nimport path from 'path';\nimport axios from 'axios';\nimport concat from 'concat-stream';\n\nimport { Cacher } from './tools/FsCache';\nimport Config from './Config';\nimport * as Extract from './Extract';\nimport * as Session from './Session';\nimport UserManager from './User';\nimport UserSettings from './UserSettings';\nimport XDLError from './XDLError';\n\nconst MAX_CONTENT_LENGTH = 100 /* MB */ * 1024 * 1024;\n\nconst TIMER_DURATION = 30000;\nconst TIMEOUT = 3600000;\n\nfunction ApiError(code, message) {\n  let err = new Error(message);\n  // $FlowFixMe error has no property code\n  err.code = code;\n  // $FlowFixMe error has no property _isApiError\n  err._isApiError = true;\n  return err;\n}\n\n// These aren't constants because some commands switch between staging and prod\nfunction _rootBaseUrl() {\n  return `${Config.api.scheme}://${Config.api.host}`;\n}\n\nfunction _apiBaseUrl() {\n  let rootBaseUrl = _rootBaseUrl();\n  if (Config.api.port) {\n    rootBaseUrl += ':' + Config.api.port;\n  }\n  return rootBaseUrl + '/--/api';\n}\n\nasync function _callMethodAsync(\n  url,\n  method,\n  requestBody,\n  requestOptions,\n  returnEntireResponse = false\n): Promise<any> {\n  const clientId = await Session.clientIdAsync();\n  const session = await UserManager.getSessionAsync();\n  const skipValidationToken = process.env['EXPO_SKIP_MANIFEST_VALIDATION_TOKEN'];\n\n  let headers: any = {\n    'Exp-ClientId': clientId,\n  };\n\n  if (skipValidationToken) {\n    headers['Exp-Skip-Manifest-Validation-Token'] = skipValidationToken;\n  }\n\n  if (session) {\n    headers['Expo-Session'] = session.sessionSecret;\n  }\n\n  let options = {\n    url,\n    method: method || 'get',\n    headers,\n    maxContentLength: MAX_CONTENT_LENGTH,\n  };\n\n  if (requestBody) {\n    options = {\n      ...options,\n      data: requestBody,\n    };\n  }\n\n  if (requestOptions) {\n    if (requestOptions.formData) {\n      let convertedFormData = await _convertFormDataToBuffer(requestOptions.formData);\n      let { data } = convertedFormData;\n      options.headers = {\n        ...options.headers,\n        ...requestOptions.formData.getHeaders(),\n      };\n      options = { ...options, data };\n    } else {\n      options = { ...options, ...requestOptions };\n    }\n  }\n  let response = await axios.request(options);\n  if (!response) {\n    throw new Error('Unexpected error: Request failed.');\n  }\n  let responseBody = response.data;\n  var responseObj;\n  if (_.isString(responseBody)) {\n    try {\n      responseObj = JSON.parse(responseBody);\n    } catch (e) {\n      throw new XDLError(\n        'INVALID_JSON',\n        'Invalid JSON returned from API: ' + e + '. Response body: ' + responseBody\n      );\n    }\n  } else {\n    responseObj = responseBody;\n  }\n  if (responseObj.err) {\n    let err = ApiError(responseObj.code || 'API_ERROR', 'API Response Error: ' + responseObj.err);\n    // $FlowFixMe can't add arbitrary properties to error\n    err.serverError = responseObj.err;\n    throw err;\n  } else {\n    return returnEntireResponse ? response : responseObj;\n  }\n}\n\nasync function _convertFormDataToBuffer(formData) {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\nasync function _downloadAsync(url, outputPath, progressFunction, retryFunction) {\n  let promptShown = false;\n  let currentProgress = 0;\n\n  let { cancel, token } = axios.CancelToken.source();\n\n  let warningTimer = setTimeout(() => {\n    if (retryFunction) {\n      retryFunction(cancel);\n    }\n    promptShown = true;\n  }, TIMER_DURATION);\n\n  const tmpPath = `${outputPath}.download`;\n  const config = {\n    timeout: TIMEOUT,\n    responseType: 'stream',\n    cancelToken: token,\n  };\n  let response = await axios(url, config);\n  await new Promise(resolve => {\n    let totalDownloadSize = response.data.headers['content-length'];\n    let downloadProgress = 0;\n    response.data\n      .on('data', chunk => {\n        downloadProgress += chunk.length;\n        const roundedProgress = Math.floor((downloadProgress / totalDownloadSize) * 100);\n        if (currentProgress !== roundedProgress) {\n          currentProgress = roundedProgress;\n          clearTimeout(warningTimer);\n          if (!promptShown) {\n            warningTimer = setTimeout(() => {\n              if (retryFunction) {\n                retryFunction(cancel);\n              }\n              promptShown = true;\n            }, TIMER_DURATION);\n          }\n          if (progressFunction) {\n            progressFunction(roundedProgress);\n          }\n        }\n      })\n      .on('end', () => {\n        clearTimeout(warningTimer);\n        if (progressFunction && currentProgress !== 100) {\n          progressFunction(100);\n        }\n        resolve();\n      })\n      .pipe(fs.createWriteStream(tmpPath));\n  });\n  await fs.rename(tmpPath, outputPath);\n}\n\nexport default class ApiClient {\n  static host: string = Config.api.host;\n  static port: number = Config.api.port || 80;\n\n  static _schemaCaches = {};\n\n  static async callMethodAsync(\n    methodName: string,\n    args: Array<*>,\n    method: string,\n    requestBody: ?Object,\n    requestOptions: ?Object = {},\n    returnEntireResponse: boolean = false\n  ): Promise<any> {\n    let url =\n      _apiBaseUrl() +\n      '/' +\n      encodeURIComponent(methodName) +\n      '/' +\n      encodeURIComponent(JSON.stringify(args));\n    return _callMethodAsync(url, method, requestBody, requestOptions, returnEntireResponse);\n  }\n\n  static async callPathAsync(\n    path: string,\n    method: ?string,\n    requestBody: ?Object,\n    requestOptions: ?Object = {}\n  ) {\n    let url = _rootBaseUrl() + path;\n    return _callMethodAsync(url, method, requestBody, requestOptions);\n  }\n\n  static async xdlSchemaAsync(sdkVersion) {\n    if (!ApiClient._schemaCaches.hasOwnProperty(sdkVersion)) {\n      ApiClient._schemaCaches[sdkVersion] = new Cacher(\n        async () => {\n          return await ApiClient.callPathAsync(`/--/xdl-schema/${sdkVersion}`);\n        },\n        `schema-${sdkVersion}.json`,\n        0,\n        path.join(__dirname, `../caches/schema-${sdkVersion}.json`)\n      );\n    }\n\n    return await ApiClient._schemaCaches[sdkVersion].getAsync();\n  }\n\n  static async downloadAsync(url, outputPath, options = {}, progressFunction, retryFunction) {\n    if (options.extract) {\n      let dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n      let tmpPath = path.join(dotExpoHomeDirectory, 'tmp-download-file');\n      await _downloadAsync(url, tmpPath);\n      await Extract.extractAsync(tmpPath, outputPath);\n      rimraf.sync(tmpPath);\n    } else {\n      await _downloadAsync(url, outputPath, progressFunction, retryFunction);\n    }\n  }\n}\n"],"sourceRoot":"/@expo/xdl@54.1.5/src"}