{"version":3,"sources":["detach/ExponentTools.js"],"names":["request","Request","defaults","resolveWithFullResponse","_getFilesizeInBytes","path","let","stats","fs","statSync","fileSizeInBytes","parseSdkMajorVersion","expSdkVersion","Infinity","sdkMajorVersion","versionComponents","split","map","number","parseInt","_","saveUrlToPathAsync","url","Promise","resolve","reject","stream","createWriteStream","on","Error","pipeRequest","timeout","pipe","saveImageToPathAsync","projectRoot","pathOrURL","outPath","localPath","existsSync","createReadStream","async","getManifestAsync","headers","options","buildPhaseLogger","logger","withFields","buildPhase","requestOptions","replace","response","await","_retryPromise","err","error","responseBody","body","info","manifest","JSON","parse","e","fn","retries","spawnAsyncThrowError","args","length","spawnAsyncQuiet","stdio","cwd","process","pipeToLogger","promise","child","streamsKeys","isObject","keys","pickBy","identity","streamsToLogs","pick","pipeOutputToLogger","loggerFields","spawnAsync","message","createSpawner","command","lastArg","last","optionsFromArg","pop","transformFileContentsAsync","filename","transform","fileString","readFile","newFileString","writeFile","manifestUsesSplashApi","platform","splash","ios","android","rimrafDontThrow","directory","rimraf","sync","warn","removeIfExists","file","unlink","isDirectory","dir","getResolvedLocalesAsync","inMemoryManifest","locales","undefined","lang","Object","entries","s","XDLError","stringify","regexFileAsync","regex","toString","deleteLinesInFileAsync","startRegex","endRegex","lines","filteredLines","inDeleteRange","i","match","push","join"],"mappings":"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","file":"../../detach/ExponentTools.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport Request from 'request-promise-native';\n// `request-promise-native` discourages using pipe. Noticed some issues with\n// error handling so when using pipe use the original request lib instead.\nimport pipeRequest from 'request';\nimport rimraf from 'rimraf';\nimport spawnAsyncQuiet from '@expo/spawn-async';\nimport _ from 'lodash';\n\nimport logger, { pipeOutputToLogger } from './Logger';\nimport XDLError from '../XDLError';\n\nconst request = Request.defaults({\n  resolveWithFullResponse: true,\n});\n\nfunction _getFilesizeInBytes(path) {\n  let stats = fs.statSync(path);\n  let fileSizeInBytes = stats['size'];\n  return fileSizeInBytes;\n}\n\nfunction parseSdkMajorVersion(expSdkVersion) {\n  // We assume that the unversioned SDK is the latest\n  if (expSdkVersion === 'UNVERSIONED') {\n    return Infinity;\n  }\n\n  let sdkMajorVersion = 0;\n  try {\n    let versionComponents = expSdkVersion.split('.').map(number => parseInt(number, 10));\n    sdkMajorVersion = versionComponents[0];\n  } catch (_) {}\n  return sdkMajorVersion;\n}\n\nfunction saveUrlToPathAsync(url, path) {\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(path);\n    stream.on('close', () => {\n      if (_getFilesizeInBytes(path) < 10) {\n        reject(new Error(`${url} is too small`));\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    pipeRequest({ url, timeout: 20000 }).pipe(stream);\n  });\n}\n\nfunction saveImageToPathAsync(projectRoot, pathOrURL, outPath) {\n  const localPath = path.resolve(projectRoot, pathOrURL);\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(outPath);\n    stream.on('close', () => {\n      if (_getFilesizeInBytes(outPath) < 10) {\n        throw new Error(`{filename} is too small`);\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    if (fs.existsSync(localPath)) {\n      fs.createReadStream(localPath).pipe(stream);\n    } else {\n      pipeRequest(pathOrURL).pipe(stream);\n    }\n  });\n}\n\nasync function getManifestAsync(url, headers, options = {}) {\n  const buildPhaseLogger = options.logger || logger.withFields({ buildPhase: 'reading manifest' });\n  const requestOptions = {\n    url: url.replace('exp://', 'http://'),\n    headers,\n  };\n\n  let response;\n  try {\n    response = await _retryPromise(() => request(requestOptions));\n  } catch (err) {\n    buildPhaseLogger.error(err);\n    throw new Error('Failed to fetch manifest from www');\n  }\n  const responseBody = response.body;\n  buildPhaseLogger.info('Using manifest:', responseBody);\n  let manifest;\n  try {\n    manifest = JSON.parse(responseBody);\n  } catch (e) {\n    throw new Error(`Unable to parse manifest: ${e}`);\n  }\n\n  return manifest;\n}\n\nasync function _retryPromise(fn, retries = 5) {\n  try {\n    return await fn();\n  } catch (err) {\n    if (retries-- > 0) {\n      return await _retryPromise(fn, retries);\n    } else {\n      throw err;\n    }\n  }\n}\n\nasync function spawnAsyncThrowError(...args) {\n  if (args.length === 2) {\n    return spawnAsyncQuiet(args[0], args[1], {\n      stdio: 'inherit',\n      cwd: process.cwd(),\n    });\n  } else {\n    const options = args[2];\n    const { pipeToLogger } = options;\n    if (pipeToLogger) {\n      options.stdio = 'pipe';\n      options.cwd = options.cwd || process.cwd();\n    }\n    const promise = spawnAsyncQuiet(...args);\n    if (pipeToLogger && promise.child) {\n      const streamsKeys = _.isObject(pipeToLogger)\n        ? _.keys(_.pickBy(pipeToLogger, _.identity))\n        : ['stdout', 'stderr'];\n      const streamsToLogs = _.pick(promise.child, streamsKeys);\n      pipeOutputToLogger(streamsToLogs, options.loggerFields, options);\n    }\n    return promise;\n  }\n}\n\nasync function spawnAsync(...args) {\n  try {\n    return await spawnAsyncThrowError(...args);\n  } catch (e) {\n    logger.error(e.message);\n  }\n}\n\nfunction createSpawner(buildPhase, logger) {\n  return (command, ...args) => {\n    const lastArg = _.last(args);\n    const optionsFromArg = _.isObject(lastArg) ? args.pop() : {};\n\n    const options = { ...optionsFromArg, pipeToLogger: true };\n    if (buildPhase) {\n      options.loggerFields = options.loggerFields ? options.loggerFields : {};\n      options.loggerFields = { ...options.loggerFields, buildPhase };\n    }\n\n    if (logger) {\n      logger.info('Executing command:', command, ...args);\n    }\n    return spawnAsyncThrowError(command, args, options);\n  };\n}\n\nasync function transformFileContentsAsync(filename, transform) {\n  let fileString = await fs.readFile(filename, 'utf8');\n  let newFileString = transform(fileString);\n  if (newFileString !== null) {\n    await fs.writeFile(filename, newFileString);\n  }\n}\n\nfunction manifestUsesSplashApi(manifest, platform) {\n  if (platform === 'ios') {\n    return manifest.splash || (manifest.ios && manifest.ios.splash);\n  }\n  if (platform === 'android') {\n    return manifest.splash || (manifest.android && manifest.android.splash);\n  }\n  return false;\n}\n\nfunction rimrafDontThrow(directory) {\n  try {\n    rimraf.sync(directory);\n  } catch (e) {\n    logger.warn(\n      `There was an issue cleaning up, but your project should still work. You may need to manually remove ${directory}. (${e})`\n    );\n  }\n}\n\nasync function removeIfExists(file) {\n  try {\n    await fs.unlink(file);\n  } catch (e) {}\n}\n\nfunction isDirectory(dir) {\n  try {\n    if (fs.statSync(dir).isDirectory()) {\n      return true;\n    }\n\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function getResolvedLocalesAsync(inMemoryManifest) {\n  const locales = {};\n  if (inMemoryManifest.locales !== undefined) {\n    for (const [lang, path] of Object.entries(inMemoryManifest.locales)) {\n      const s = await fs.readFile(path, 'utf8');\n      try {\n        locales[lang] = JSON.parse(s);\n      } catch (e) {\n        throw new XDLError('INVALID_JSON', JSON.stringify(e));\n      }\n    }\n  }\n  return locales;\n}\n\nasync function regexFileAsync(regex, replace, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(startRegex, endRegex, filename) {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  let lines = fileString.split(/\\r?\\n/);\n  let filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nexport {\n  isDirectory,\n  parseSdkMajorVersion,\n  saveUrlToPathAsync,\n  saveImageToPathAsync,\n  getManifestAsync,\n  rimrafDontThrow,\n  removeIfExists,\n  spawnAsyncThrowError,\n  spawnAsync,\n  transformFileContentsAsync,\n  manifestUsesSplashApi,\n  getResolvedLocalesAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  createSpawner,\n};\n"],"sourceRoot":"/@expo/xdl@54.1.5/src"}