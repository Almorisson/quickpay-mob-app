{"version":3,"sources":["detach/StandaloneContext.js"],"names":["StandaloneContext","type","config","projectPath","exp","publishedUrl","let","context","data","published","url","releaseChannel","build","StandaloneBuildFlags","createEmpty","expoSourcePath","archivePath","manifest","privateConfig","testEnvironment","shellAppSdkVersion"],"mappings":";;;;;;;AAIA;;;;;;AA2BA,MAAMA,iBAAN,CAAwB;AAAA;AAAA,yCAiER,MAAM;AAClB,aAAO,KAAKC,IAAL,KAAc,SAAd,IAA2B,CAAC,KAAKC,MAAxC;AACD,KAnEqB;AAAA;;AAAA;;gBAAlBF,iB,uBAUuB,CACzBG,WADyB,EAEzBC,GAFyB,EAGzBC,YAHyB,KAIH;AACtBC,MAAIC,OAAAA,GAAU,IAAIP,iBAAJ,EAAdM;AACAC,EAAAA,OAAO,CAACN,IAARM,GAAe,MAAfA;AACAA,EAAAA,OAAO,CAACC,IAARD,GAAe;AACbJ,IAAAA,WADa;AAEbC,IAAAA;AAFa,GAAfG;AAIAA,EAAAA,OAAO,CAACL,MAARK,GAAiBH,GAAjBG;AACAA,EAAAA,OAAO,CAACE,SAARF,GAAoB;AAClBG,IAAAA,GAAG,EAAEL,YADa;AAElBM,IAAAA,cAAc,EAAE;AAFE,GAApBJ,CARsB,CAYtB;;AACAA,EAAAA,OAAO,CAACK,KAARL,GAAgBM,8BAAqBC,WAArBD,EAAhBN;AACA,SAAOA,OAAP;AACD,C;;gBA7BGP,iB,0BA+B0B,CAC5Be,cAD4B,EAE5BC,WAF4B,EAG5BC,QAH4B,EAI5BC,aAJ4B,EAK5BC,eAL4B,EAM5BP,KAN4B,EAO5BP,YAP4B,EAQ5BM,cAR4B,EAS5BS,kBAT4B,KAUN;AACtBd,MAAIC,OAAAA,GAAU,IAAIP,iBAAJ,EAAdM;AACAC,EAAAA,OAAO,CAACN,IAARM,GAAe,SAAfA;AACAA,EAAAA,OAAO,CAACC,IAARD,GAAe;AACbQ,IAAAA,cADa;AAEbC,IAAAA,WAFa;AAGbC,IAAAA,QAHa;AAIbC,IAAAA,aAJa;AAKbC,IAAAA,eALa;AAMbC,IAAAA;AANa,GAAfb;AAQAA,EAAAA,OAAO,CAACL,MAARK,GAAiBU,QAAjBV;AACAA,EAAAA,OAAO,CAACK,KAARL,GAAgBK,KAAhBL;AACAA,EAAAA,OAAO,CAACE,SAARF,GAAoB;AAClBG,IAAAA,GAAG,EAAEL,YADa;AAElBM,IAAAA,cAAc,EAAEA,cAAAA,GAAiBA,cAAjBA,GAAkC;AAFhC,GAApBJ;AAIA,SAAOA,OAAP;AACD,C;;eAWYP,iB","file":"../../detach/StandaloneContext.js","sourcesContent":["/**\n * @flow\n */\n\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\n\ntype StandaloneContextDataType = 'user' | 'service';\n\ntype StandaloneContextTestEnvironment = 'none' | 'local' | 'ci';\n\n/**\n *  A user context is used when we are configuring a standalone app locally on a user's machine,\n *  such as during `exp detach`.\n */\ntype StandaloneContextDataUser = {\n  projectPath: string,\n  exp: any,\n};\n\n/**\n *  A service context is used when we are generating a standalone app remotely on an Expo\n *  service machine, such as during `exp build`.\n */\ntype StandaloneContextDataService = {\n  expoSourcePath: string,\n  archivePath: ?string,\n  manifest: ?any,\n  privateConfig: ?any,\n  testEnvironment: StandaloneContextTestEnvironment,\n};\n\nclass StandaloneContext {\n  type: StandaloneContextDataType;\n  data: StandaloneContextDataUser | StandaloneContextDataService;\n  config: ?any; // same as underlying app.json or manifest\n  published: {\n    url: ?string,\n    releaseChannel: string,\n  };\n  build: StandaloneBuildFlags;\n\n  static createUserContext = (\n    projectPath: string,\n    exp: any,\n    publishedUrl: ?string\n  ): StandaloneContext => {\n    let context = new StandaloneContext();\n    context.type = 'user';\n    context.data = {\n      projectPath,\n      exp,\n    };\n    context.config = exp;\n    context.published = {\n      url: publishedUrl,\n      releaseChannel: 'default',\n    };\n    // we never expect to handle the build step for user contexts right now\n    context.build = StandaloneBuildFlags.createEmpty();\n    return context;\n  };\n\n  static createServiceContext = (\n    expoSourcePath: string,\n    archivePath: ?string,\n    manifest: ?any,\n    privateConfig: ?any,\n    testEnvironment: StandaloneContextTestEnvironment,\n    build: StandaloneBuildFlags,\n    publishedUrl: ?string,\n    releaseChannel: ?string,\n    shellAppSdkVersion: ?string\n  ): StandaloneContext => {\n    let context = new StandaloneContext();\n    context.type = 'service';\n    context.data = {\n      expoSourcePath,\n      archivePath,\n      manifest,\n      privateConfig,\n      testEnvironment,\n      shellAppSdkVersion,\n    };\n    context.config = manifest;\n    context.build = build;\n    context.published = {\n      url: publishedUrl,\n      releaseChannel: releaseChannel ? releaseChannel : 'default',\n    };\n    return context;\n  };\n\n  /**\n   *  On iOS we begin configuring standalone apps before we have any information about the\n   *  project's manifest.\n   */\n  isAnonymous = () => {\n    return this.type === 'service' && !this.config;\n  };\n}\n\nexport default StandaloneContext;\n"],"sourceRoot":"/@expo/xdl@54.1.5/src"}