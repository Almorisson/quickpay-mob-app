{"version":3,"sources":["detach/StandaloneBuildFlags.js"],"names":["StandaloneBuildFlags","let","flags","configuration","isExpoClientBuild","ios","get","android"],"mappings":";;;;;;;AAAA;;;;;;AAsBA,MAAMA,oBAAN,CAA2B;;gBAArBA,oB,iBAKiB,MAAM;AACzBC,MAAIC,KAAAA,GAAQ,IAAIF,oBAAJ,EAAZC;AACAC,EAAAA,KAAK,CAACC,aAAND,GAAsB,OAAtBA;;AACAA,EAAAA,KAAK,CAACE,iBAANF,GAA0B,MAAM,KAAhCA;;AACA,SAAOA,KAAP;AACD,C;;gBAVGF,oB,eAYe,CACjBG,aADiB,EAEjBE,GAFiB,KAGQ;AACzBJ,MAAIC,KAAAA,GAAQ,IAAIF,oBAAJ,EAAZC;AACAC,EAAAA,KAAK,CAACC,aAAND,GAAsBC,aAAtBD;AACAA,EAAAA,KAAK,CAACG,GAANH,GAAYG,GAAZH;;AACAA,EAAAA,KAAK,CAACE,iBAANF,GAA0B,MAAMI,kBAAID,GAAJC,EAAS,WAATA,MAA0B,QAA1DJ;;AACA,SAAOA,KAAP;AACD,C;;gBArBGF,oB,mBAuBmB,CACrBG,aADqB,EAErBI,OAFqB,KAGI;AACzBN,MAAIC,KAAAA,GAAQ,IAAIF,oBAAJ,EAAZC;AACAC,EAAAA,KAAK,CAACC,aAAND,GAAsBC,aAAtBD;AACAA,EAAAA,KAAK,CAACK,OAANL,GAAgBK,OAAhBL;;AACAA,EAAAA,KAAK,CAACE,iBAANF,GAA0B,MAAM,KAAhCA;;AACA,SAAOA,KAAP;AACD,C;;eAGYF,oB","file":"../../detach/StandaloneBuildFlags.js","sourcesContent":["import get from 'lodash/get';\n\n/**\n *  @flow\n *\n *  StandaloneBuildFlags is owned by a StandaloneContext and carries information about\n *  how to compile native code during the build step.\n */\n\ntype StandaloneBuildConfiguration = 'Debug' | 'Release';\ntype StandaloneBuildAndroidFlags = {\n  keystore: string,\n  keystorePassword: string,\n  keyAlias: string,\n  keyPassword: string,\n  outputFile: ?string,\n};\ntype StandaloneBuildIosFlags = {\n  workspaceSourcePath: string,\n  appleTeamId: ?string,\n};\n\nclass StandaloneBuildFlags {\n  configuration: StandaloneBuildConfiguration;\n  android: ?StandaloneBuildAndroidFlags;\n  ios: ?StandaloneBuildIosFlags;\n\n  static createEmpty = () => {\n    let flags = new StandaloneBuildFlags();\n    flags.configuration = 'Debug';\n    flags.isExpoClientBuild = () => false;\n    return flags;\n  };\n\n  static createIos = (\n    configuration: StandaloneBuildConfiguration,\n    ios: ?StandaloneBuildIosFlags\n  ): StandaloneBuildFlags => {\n    let flags = new StandaloneBuildFlags();\n    flags.configuration = configuration;\n    flags.ios = ios;\n    flags.isExpoClientBuild = () => get(ios, 'buildType') === 'client';\n    return flags;\n  };\n\n  static createAndroid = (\n    configuration: StandaloneBuildConfiguration,\n    android: ?StandaloneBuildAndroidFlags\n  ): StandaloneBuildFlags => {\n    let flags = new StandaloneBuildFlags();\n    flags.configuration = configuration;\n    flags.android = android;\n    flags.isExpoClientBuild = () => false;\n    return flags;\n  };\n}\n\nexport default StandaloneBuildFlags;\n"],"sourceRoot":"/@expo/xdl@54.1.5/src"}