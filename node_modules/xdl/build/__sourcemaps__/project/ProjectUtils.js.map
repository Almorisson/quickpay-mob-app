{"version":3,"sources":["project/ProjectUtils.js"],"names":["async","file","await","fs","stat","isFile","e","fileExistsAsync","projectRoot","appJson","path","join","expJson","_findConfigPathAsync","let","configPath","customConfigPaths","configName","basename","configNamespace","findConfigFileAsync","configFilenameAsync","expRcPath","existsSync","JsonFile","readAsync","json5","logError","toString","readExpRcAsync","setCustomConfigPath","exp","pkg","rootConfig","code","isJsonFileError","message","packageJsonPath","nodeModulesPath","resolve","name","slug","toLowerCase","version","readConfigJsonAsync","options","config","Error","writeAsync","writeConfigJsonAsync","logWithLevel","logDebug","logInfo","logWarning","clearNotification","attachLoggerStream","MAX_MESSAGE_LENGTH","_projectRootToLogger","_getLogger","logger","Logger","child","type","project","level","object","msg","id","useRedux","Config","useReduxNotifications","issueId","debug","info","warn","error","state","store","dispatch","actions","notifications","add","tag","truncatedMessage","length","substring","Analytics","logEvent","clear","issueCleared","stream","addStream"],"mappings":"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","file":"../../project/ProjectUtils.js","sourcesContent":["/**\n * @flow\n */\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport JsonFile from '@expo/json-file';\nimport slug from 'slugify';\n\nimport * as Analytics from '../Analytics';\nimport Config from '../Config';\nimport Logger from '../Logger';\nimport * as state from '../state';\n\nimport * as Sentry from '../Sentry';\n\nconst MAX_MESSAGE_LENGTH = 200;\nlet _projectRootToLogger = {};\n\nfunction _getLogger(projectRoot: string) {\n  let logger = _projectRootToLogger[projectRoot];\n  if (!logger) {\n    logger = Logger.child({\n      type: 'project',\n      project: path.resolve(projectRoot),\n    });\n    _projectRootToLogger[projectRoot] = logger;\n  }\n\n  return logger;\n}\n\nexport function logWithLevel(\n  projectRoot: string,\n  level: string,\n  object: any,\n  msg: string,\n  id: ?string\n) {\n  let useRedux = id && Config.useReduxNotifications;\n\n  if (id) {\n    object.issueId = id;\n  }\n\n  let logger = _getLogger(projectRoot);\n  switch (level) {\n    case 'debug':\n      logger.debug(object, msg);\n      break;\n    case 'info':\n      logger.info(object, msg);\n      break;\n    case 'warn':\n      if (!useRedux) {\n        logger.warn(object, msg);\n      }\n      break;\n    case 'error':\n      if (!useRedux) {\n        logger.error(object, msg);\n      }\n      break;\n    default:\n      logger.debug(object, msg);\n      break;\n  }\n\n  if (useRedux && (level === 'warn' || level === 'error')) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, msg, projectRoot, level));\n  }\n}\n\nexport function logDebug(projectRoot: string, tag: string, message: string, id: ?string) {\n  _getLogger(projectRoot).debug({ tag }, message.toString());\n}\n\nexport function logInfo(projectRoot: string, tag: string, message: string, id: ?string) {\n  if (id && Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, message, tag, 'info'));\n  } else {\n    const object = { tag };\n    if (id) {\n      object.issueId = id;\n    }\n    _getLogger(projectRoot).info(object, message.toString());\n  }\n}\n\nexport function logError(projectRoot: string, tag: string, message: string, id: ?string) {\n  if (id && Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, message, tag, 'error'));\n  } else {\n    const object = { tag };\n    if (id) {\n      object.issueId = id;\n    }\n    _getLogger(projectRoot).error(object, message.toString());\n  }\n\n  let truncatedMessage = message.toString();\n  if (truncatedMessage.length > MAX_MESSAGE_LENGTH) {\n    truncatedMessage = truncatedMessage.substring(0, MAX_MESSAGE_LENGTH);\n  }\n\n  // temporarily remove sentry until we can trim events\n  // send error to Sentry\n  // Sentry.logError(message.toString(), {\n  //   tags: { tag },\n  // });\n}\n\nexport function logWarning(projectRoot: string, tag: string, message: string, id: ?string) {\n  if (id && Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.add(projectRoot, id, message, tag, 'warn'));\n  } else {\n    const object = { tag };\n    if (id) {\n      object.issueId = id;\n    }\n    _getLogger(projectRoot).warn(object, message.toString());\n  }\n\n  let truncatedMessage = message.toString();\n  if (truncatedMessage.length > MAX_MESSAGE_LENGTH) {\n    truncatedMessage = truncatedMessage.substring(0, MAX_MESSAGE_LENGTH);\n  }\n  Analytics.logEvent('Project Warning', {\n    projectRoot,\n    tag,\n    message: truncatedMessage,\n  });\n}\n\nexport function clearNotification(projectRoot: string, id: string) {\n  if (Config.useReduxNotifications) {\n    state.store.dispatch(state.actions.notifications.clear(projectRoot, id));\n  } else {\n    _getLogger(projectRoot).info(\n      {\n        tag: 'expo',\n        issueCleared: true,\n        issueId: id,\n      },\n      `No issue with ${id}`\n    );\n  }\n}\n\nexport function attachLoggerStream(projectRoot: string, stream: any) {\n  _getLogger(projectRoot).addStream(stream);\n}\n\nexport async function fileExistsAsync(file: string): Promise<boolean> {\n  try {\n    return (await fs.stat(file)).isFile();\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function _findConfigPathAsync(projectRoot) {\n  const appJson = path.join(projectRoot, 'app.json');\n  const expJson = path.join(projectRoot, 'exp.json');\n  if (await fileExistsAsync(appJson)) {\n    return appJson;\n  } else if (await fileExistsAsync(expJson)) {\n    return expJson;\n  } else {\n    return appJson;\n  }\n}\n\nexport async function findConfigFileAsync(\n  projectRoot: string\n): Promise<{ configPath: string, configName: string, configNamespace: ?string }> {\n  let configPath;\n  if (customConfigPaths[projectRoot]) {\n    configPath = customConfigPaths[projectRoot];\n  } else {\n    configPath = await _findConfigPathAsync(projectRoot);\n  }\n  const configName = path.basename(configPath);\n  const configNamespace = configName !== 'exp.json' ? 'expo' : null;\n  return { configPath, configName, configNamespace };\n}\n\nexport async function configFilenameAsync(projectRoot: string): Promise<string> {\n  return (await findConfigFileAsync(projectRoot)).configName;\n}\n\nexport async function readExpRcAsync(projectRoot: string): Promise<any> {\n  const expRcPath = path.join(projectRoot, '.exprc');\n\n  if (!fs.existsSync(expRcPath)) {\n    return {};\n  }\n\n  try {\n    return await JsonFile.readAsync(expRcPath, { json5: true });\n  } catch (e) {\n    logError(projectRoot, 'expo', `Error parsing JSON file: ${e.toString()}`);\n    return {};\n  }\n}\n\nlet customConfigPaths = {};\n\nexport async function setCustomConfigPath(projectRoot: string, configPath: string) {\n  customConfigPaths[projectRoot] = configPath;\n}\n\nexport async function readConfigJsonAsync(\n  projectRoot: string\n): Promise<{ exp: ?Object, pkg: ?Object, rootConfig: ?Object }> {\n  let exp;\n  let pkg;\n  let rootConfig;\n\n  const { configPath, configName, configNamespace } = await findConfigFileAsync(projectRoot);\n\n  try {\n    exp = await JsonFile.readAsync(configPath, { json5: true });\n\n    if (configNamespace) {\n      // if we're not using exp.json, then we've stashed everything under an expo key\n      rootConfig = exp;\n      exp = exp[configNamespace];\n    }\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      // config missing. might be in package.json\n    } else if (e.isJsonFileError) {\n      logError(projectRoot, 'expo', e.message);\n      return { exp: null, pkg: null };\n    }\n  }\n\n  try {\n    const packageJsonPath =\n      exp && exp.nodeModulesPath\n        ? path.join(path.resolve(projectRoot, exp.nodeModulesPath), 'package.json')\n        : path.join(projectRoot, 'package.json');\n    pkg = await JsonFile.readAsync(packageJsonPath);\n  } catch (e) {\n    if (e.isJsonFileError) {\n      logError(projectRoot, 'expo', e.message);\n      return { exp: null, pkg: null };\n    }\n\n    // pkg missing\n  }\n\n  // Easiest bail-out: package.json is missing\n  if (!pkg) {\n    logError(projectRoot, 'expo', `Error: Can't find package.json`);\n    return { exp: null, pkg: null };\n  }\n\n  // Grab our exp config from package.json (legacy) or exp.json\n  if (!exp && pkg.exp) {\n    exp = pkg.exp;\n    logError(projectRoot, 'expo', `Error: Move your \"exp\" config from package.json to exp.json.`);\n  } else if (!exp && !pkg.exp) {\n    logError(projectRoot, 'expo', `Error: Missing ${configName}. See https://docs.expo.io/`);\n    return { exp: null, pkg: null };\n  }\n\n  // fill any required fields we might care about\n\n  // TODO(adam) decide if there are other fields we want to provide defaults for\n\n  if (exp && !exp.name) {\n    exp.name = pkg.name;\n  }\n\n  if (exp && !exp.slug) {\n    exp.slug = slug(exp.name.toLowerCase());\n  }\n\n  if (exp && !exp.version) {\n    exp.version = pkg.version;\n  }\n\n  return { exp, pkg, rootConfig };\n}\n\nexport async function writeConfigJsonAsync(\n  projectRoot: string,\n  options: Object\n): Promise<{ exp: ?Object, pkg: ?Object, rootConfig: ?Object }> {\n  const { configName, configPath, configNamespace } = await findConfigFileAsync(projectRoot);\n  let { exp, pkg, rootConfig } = await readConfigJsonAsync(projectRoot);\n  let config = rootConfig || {};\n\n  if (!exp) {\n    throw new Error(`Couldn't read ${configName}`);\n  }\n  if (!pkg) {\n    throw new Error(`Couldn't read package.json`);\n  }\n\n  exp = {\n    ...exp,\n    ...options,\n  };\n\n  if (configNamespace) {\n    config[configNamespace] = exp;\n  } else {\n    config = exp;\n  }\n\n  await JsonFile.writeAsync(configPath, config, { json5: false });\n\n  return {\n    exp,\n    pkg,\n    rootConfig,\n  };\n}\n"],"sourceRoot":"/xdl@51.6.4/src"}