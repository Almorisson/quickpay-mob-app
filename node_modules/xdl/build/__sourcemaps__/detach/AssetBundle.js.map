{"version":3,"sources":["detach/AssetBundle.js"],"names":["async","assets","dest","oldFormat","reduce","res","cur","concat","fileHashes","map","h","type","await","fs","ensureDir","batches","_","chunk","batch","Promise","all","asset","extensionIndex","lastIndexOf","prefixLength","length","hash","substring","saveUrlToPathAsync","path","join","bundleAsync"],"mappings":";;;;;;;;+BAWOA,WACLC,MADKD,EAELE,IAFKF,EAGLG,YAAqB,KAHhBH,EAIU;AACf,QAAI,CAACC,MAAL,EAAa;AACX;AACF;AACA;AACA,QAAI,OAAOA,OAAO,CAAPA,CAAP,KAAqB,QAAzB,EAAmC;AACjCA,eAASA,OAAOG,MAAPH,CACP,UAACI,GAAD,EAAMC,GAAN;AAAA,eACED,IAAIE,MAAJF,CAAWC,IAAIE,UAAJF,CAAeG,GAAfH,CAAmBI;AAAAA,iBAAK,WAAWA,CAAX,IAAgBJ,IAAIK,IAAJL,GAAW,MAAMA,IAAIK,IAArBL,GAA4B,EAA5C,CAALI;AAAAA,SAAnBJ,CAAXD,CADF;AAAA,OADOJ,EAGP,EAHOA,CAATA;AAKF;;AAEAW,UAAMC,sCAAGC,SAAHD,CAAaX,IAAbW,CAAND;;AAEA,UAAMG,UAAUC,oCAAEC,KAAFD,CAAQf,MAARe,EAAgB,CAAhBA,CAAhB;AACA,SAAK,MAAME,KAAX,IAAoBH,OAApB,EAA6B;AAC3BH,YAAMO,QAAQC,GAARD,CACJD,MAAMT,GAANS;AAAAA,sCAAUlB,WAAMqB,KAANrB,EAAe;AACvB,gBAAMsB,iBAAiBD,MAAME,WAANF,CAAkB,GAAlBA,CAAvB;AACA,gBAAMG,eAAe,SAASC,MAA9B;AACA,gBAAMC,OACJJ,kBAAkB,CAAlBA,GACID,MAAMM,SAANN,CAAgBG,YAAhBH,EAA8BC,cAA9BD,CADJC,GAEID,MAAMM,SAANN,CAAgBG,YAAhBH,CAHN;AAIAT,gBAAMgB,kEACJ,mDAAmDF,IAD/CE;AAEJ;AACAC,wBAAKC,IAALD,CAAU3B,IAAV2B,EAAgB1B,YAAYuB,IAAZvB,GAAmBkB,KAAnCQ,CAHID,CAANhB;AAKD,SAZDM;;AAAAA;AAAAA;AAAAA;AAAAA,WADIC,CAANP;AAeF;AACF,G;;kBArCsBmB,W;;;;;;;AANtB;AAAA;AAAA;;;;AACA;AAAA;AAAA;;AACA;;;;AAEA;AAAA;AAAA;;;;2cATA","file":"../../detach/AssetBundle.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport { saveUrlToPathAsync } from './ExponentTools';\n\nexport async function bundleAsync(\n  assets: ?(Array<string> | Array<Object>),\n  dest: string,\n  oldFormat: boolean = false\n): Promise<void> {\n  if (!assets) {\n    return;\n  }\n  // Compat with exp 46.x.x, can remove when this version is phasing out.\n  if (typeof assets[0] === 'object') {\n    assets = assets.reduce(\n      (res, cur) =>\n        res.concat(cur.fileHashes.map(h => 'asset_' + h + (cur.type ? '.' + cur.type : ''))),\n      []\n    );\n  }\n\n  await fs.ensureDir(dest);\n\n  const batches = _.chunk(assets, 5);\n  for (const batch of batches) {\n    await Promise.all(\n      batch.map(async asset => {\n        const extensionIndex = asset.lastIndexOf('.');\n        const prefixLength = 'asset_'.length;\n        const hash =\n          extensionIndex >= 0\n            ? asset.substring(prefixLength, extensionIndex)\n            : asset.substring(prefixLength);\n        await saveUrlToPathAsync(\n          'https://d1wp6m56sqw74a.cloudfront.net/~assets/' + hash,\n          // For sdk24 the runtime expects only the hash as the filename.\n          path.join(dest, oldFormat ? hash : asset)\n        );\n      })\n    );\n  }\n}\n"],"sourceRoot":"/xdl@51.6.4/src"}