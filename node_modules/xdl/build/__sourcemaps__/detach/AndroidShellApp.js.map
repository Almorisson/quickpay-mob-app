{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","androidSrcPath","shellPath","isDetached","await","spawnAsyncThrowError","pipeToLogger","loggerFields","buildPhase","cwd","path","join","env","process","initialCopyLogger","logger","withFields","copyToShellApp","fileName","fs","copy","e","warn","copyInitialShellAppFilesAsync","context","fnLogger","let","shellPathForContext","url","published","manifest","config","releaseChannel","data","privateConfig","fullManifestUrl","replace","versionCode","javaPackage","android","package","Error","name","scheme","detach","bundleUrl","isFullManifest","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","updatesDisabled","updates","enabled","remove","appBuildGradle","regexFileAsync","deleteLinesInFileAsync","writeFile","runShPath","buildGradleFile","readFileSync","androidVersion","match","shouldShowLoadingView","xmlWeirdAndroidEscape","randomID","uuid","v4","newScheme","newSchemeSuffix","intentFilters","_","get","renderIntentFilters","searchLine","permissions","content","map","p","whitelist","forEach","s","includes","push","identifier","split","pop","blacklist","filter","writeFileSync","JSON","stringify","saveUrlToPathAsync","createAndWriteIconsToPathAsync","length","globby","absolute","filePath","removeSync","image","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","readFile","resolve","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","spawnAsync","keystorePassword","keyPassword","keystore","keyAlias","outputFile","buildShellAppAsync","requiredSdkVersion","filePathsToTransform","expoviewBuildGradle","multipleVersionReactNativeActivity","constants","appAndroidManifest","majorSdkVersion","parseSdkMajorVersion","effectiveSdkVersion","Promise","all","Object","values","removeInvalidSdkLinesWhenPreparingShell","removeObsoleteSdks","addDetachedConfigToExp","getManifestAsync","imageKeys","exponentDirectory","workingDir","EXPO_UNIVERSE_DIR","original","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","sdkVersion","Accept","getRemoteOrLocalUrl","key","basePath","splash","reduce","acc","imageKey","backgroundColor","resizeMode","createAndroidShellAppAsync","privateConfigFile","configuration","alias","exponentDir","ensureDir","info","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","type","projectPath","expoSourcePath","exp","console","assetsDirectory","publishBundlePath","relative","publishManifestPath","RegExp"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\nimport uuid from 'uuid';\n\nimport { createAndWriteIconsToPathAsync } from './AndroidIcons';\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport renderIntentFilters from './AndroidIntentFilters';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  parseSdkMajorVersion,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory(workingDir) {\n  if (workingDir) {\n    return workingDir;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let { url, sdkVersion, releaseChannel, workingDir } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n    Accept: 'application/expo+json,application/json',\n  });\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(workingDir), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean = false\n) {\n  if (androidSrcPath && !isDetached) {\n    // check if Android template files exist\n    // since we take out the prebuild step later on\n    // and we should have generated those files earlier\n    await spawnAsyncThrowError('../../tools-public/check-dynamic-macros-android.sh', [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'confirming that dynamic macros exist' },\n      cwd: path.join(androidSrcPath, 'app'),\n      env: process.env,\n    });\n  }\n\n  const initialCopyLogger = logger.withFields({ buildPhase: 'copying initial shell app files' });\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      initialCopyLogger.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('versioned-abis');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n    workingDir,\n  } = args;\n\n  const exponentDir = exponentDirectory(workingDir);\n  let androidSrcPath = path.join(exponentDir, 'android');\n  let shellPath = path.join(exponentDir, 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n      Accept: 'application/expo+json,application/json',\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath);\n  await removeObsoleteSdks(shellPath, sdkVersion);\n  await runShellAppModificationsAsync(context);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(\n      exponentDirectory(\n        context.data.expoSourcePath && path.join(context.data.expoSourcePath, '..')\n      ),\n      'android-shell-app'\n    );\n  }\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  isDetached: boolean = false\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  if (!context.data.privateConfig) {\n    fnLogger.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isDetached);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await deleteLinesInFileAsync(\n      'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n      'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n      appBuildGradle\n    );\n\n    // Don't need to compile expoview or ReactAndroid\n    // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n    await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n\n    const runShPath = path.join(shellPath, 'run.sh');\n    await regexFileAsync('host.exp.exponent/', `${javaPackage}/`, runShPath);\n    await regexFileAsync('LauncherActivity', 'MainActivity', runShPath);\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script\n  if (!isDetached) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  if (!isDetached) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (isDetached) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Change stripe schemes and add meta-data\n  const randomID = uuid.v4();\n  const newScheme = `<meta-data android:name=\"standaloneStripeScheme\" android:value=\"${randomID}\" />`;\n  await regexFileAsync(\n    '<!-- ADD HERE STRIPE SCHEME META DATA -->',\n    newScheme,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  const newSchemeSuffix = `expo.modules.payments.stripe.${randomID}\" />`;\n  await regexFileAsync(\n    'expo.modules.payments.stripe\" />',\n    newSchemeSuffix,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add app-specific intent filters\n  const intentFilters = _.get(manifest, 'android.intentFilters');\n  if (intentFilters) {\n    if (isDetached) {\n      await regexFileAsync(\n        '<!-- ADD DETACH APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    } else {\n      await regexFileAsync(\n        '<!-- ADD SHELL APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icons\n  createAndWriteIconsToPathAsync(\n    context,\n    path.join(shellPath, 'app', 'src', 'main', 'res'),\n    isDetached\n  );\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      if (isDetached) {\n        // local file so just copy it\n        await fs.copy(image.url, image.path);\n      } else {\n        await saveUrlToPathAsync(image.url, image.path);\n      }\n    });\n  }\n\n  await AssetBundle.bundleAsync(manifest.bundledAssets, `${shellPath}/app/src/main/assets`);\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isDetached) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    const gradleArgs = [`assembleProdMinSdkProdKernelRelease`];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'prodMinSdkProdKernel',\n        'release',\n        'app-prodMinSdk-prodKernel-release-unsigned.apk'\n      ),\n      `shell-unaligned.apk`\n    );\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verbose',\n        '-sigalg',\n        'SHA1withRSA',\n        '-digestalg',\n        'SHA1',\n        '-storepass',\n        androidBuildConfiguration.keystorePassword,\n        '-keypass',\n        androidBuildConfiguration.keyPassword,\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell-unaligned.apk',\n        androidBuildConfiguration.keyAlias,\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'signing created apk' },\n      }\n    );\n    await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'verifying apk alignment' },\n    });\n    try {\n      await fs.remove('shell-unaligned.apk');\n    } catch (e) {}\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verify',\n        '-verbose',\n        '-certs',\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell.apk',\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    await spawnAsyncThrowError(`./gradlew`, ['assembleDevMinSdkDevKernelDebug'], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devMinSdkDevKernel',\n        'debug',\n        'app-devMinSdk-devKernel-debug.apk'\n      ),\n      `/tmp/shell-debug.apk`\n    );\n  }\n}\n\nexport function addDetachedConfigToExp(exp: Object, context: StandaloneContext): Object {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n\n/**\n\nSome files in `android` directory have the following patterns of code:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// BEGIN_SDK_30\nsome SDK 30-specific code\n// END_SDK_30\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThe following function replaces all `BEGIN_SDK_XX` with `REMOVE_TO_HERE`\nand all `END_SDK_XX` with `REMOVE_FROM_HERE`, so after the change the code above would read:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE       <--- changed\nsome SDK 30-specific code\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE     <--- changed\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThis allows us to use `deleteLinesInFileAsync` function to remove obsolete SDKs code easily.\n\n */\nconst removeInvalidSdkLinesWhenPreparingShell = async (majorSdkVersion, filePath) => {\n  await regexFileAsync(\n    new RegExp(`BEGIN_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_TO_HERE`,\n    filePath\n  );\n  await regexFileAsync(\n    new RegExp(`END_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_FROM_HERE`,\n    filePath\n  );\n  await deleteLinesInFileAsync(\n    /WHEN_PREPARING_SHELL_REMOVE_FROM_HERE/g,\n    'WHEN_PREPARING_SHELL_REMOVE_TO_HERE',\n    filePath\n  );\n};\n\nasync function removeObsoleteSdks(shellPath: string, requiredSdkVersion: string) {\n  const filePathsToTransform = {\n    // Remove obsolete `expoview-abiXX_X_X` dependencies\n    appBuildGradle: path.join(shellPath, 'app/build.gradle'),\n    // Remove obsolete `host.exp.exponent:reactandroid:XX.X.X` dependencies from expoview\n    expoviewBuildGradle: path.join(shellPath, 'expoview/build.gradle'),\n    // Remove no-longer-valid interfaces from MultipleVersionReactNativeActivity\n    multipleVersionReactNativeActivity: path.join(\n      shellPath,\n      'expoview/src/main/java/host/exp/exponent/experience/MultipleVersionReactNativeActivity.java'\n    ),\n    // Remove invalid ABI versions from Constants\n    constants: path.join(shellPath, 'expoview/src/main/java/host/exp/exponent/Constants.java'),\n    // Remove non-existent DevSettingsActivities\n    appAndroidManifest: path.join(shellPath, 'app/src/main/AndroidManifest.xml'),\n  };\n\n  const majorSdkVersion = parseSdkMajorVersion(requiredSdkVersion);\n\n  // The single SDK change will happen when transitioning from SDK 30 to 31.\n  // Since SDK 31 there will be no versioned ABIs in shell applications, only unversioned one.\n  // And as such, we will treat the unversioned ABI as the SDK one by assigning TEMPORARY_ABI_VERSION.\n  const effectiveSdkVersion = majorSdkVersion > 30 ? 'UNVERSIONED' : `${majorSdkVersion}`;\n\n  if (effectiveSdkVersion === 'UNVERSIONED') {\n    await regexFileAsync(\n      'TEMPORARY_ABI_VERSION = null;',\n      `TEMPORARY_ABI_VERSION = \"${requiredSdkVersion}\";`,\n      filePathsToTransform.constants\n    );\n  }\n\n  await Promise.all(\n    Object.values(filePathsToTransform).map(filePath =>\n      removeInvalidSdkLinesWhenPreparingShell(effectiveSdkVersion, filePath)\n    )\n  );\n}\n"],"sourceRoot":"/xdl@51.6.4/src"}