{"version":3,"sources":["urlOpts.js"],"names":["projectDir","options","readAsync","opts","host","lan","localhost","tunnel","hostType","rawArgs","parent","hasBooleanArg","dev","getBooleanArg","minify","setAsync","optsAsync","android","openProjectAsync","ios","handleMobileOptsAsync","addOptions","program","option","argName","includes","printQRCode","url","generate","console","log","code"],"mappings":"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","file":"../urlOpts.js","sourcesContent":["import indentString from 'indent-string';\nimport _ from 'lodash';\nimport qrcodeTerminal from 'qrcode-terminal';\n\nimport { Android, ProjectSettings, Simulator } from 'xdl';\n\nimport CommandError from './CommandError';\n\nfunction addOptions(program) {\n  program\n    .option('-a, --android', 'Opens your app in Expo on a connected Android device')\n    .option(\n      '-i, --ios',\n      'Opens your app in Expo in a currently running iOS simulator on your computer'\n    )\n    .option(\n      '-m, --host [mode]',\n      'lan (default), tunnel, localhost. Type of host to use. \"tunnel\" allows you to view your link on other networks'\n    )\n    .option('--tunnel', 'Same as --host tunnel')\n    .option('--lan', 'Same as --host lan')\n    .option('--localhost', 'Same as --host localhost')\n    .option('--dev', 'Turns dev flag on')\n    .option('--no-dev', 'Turns dev flag off')\n    .option('--minify', 'Turns minify flag on')\n    .option('--no-minify', 'Turns minify flag off');\n}\n\nfunction hasBooleanArg(rawArgs, argName) {\n  return _.includes(rawArgs, '--' + argName) || _.includes(rawArgs, '--no-' + argName);\n}\n\nfunction getBooleanArg(rawArgs, argName) {\n  if (_.includes(rawArgs, '--' + argName)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nasync function optsAsync(projectDir, options) {\n  var opts = await ProjectSettings.readAsync(projectDir);\n\n  if (!!options.host + !!options.lan + !!options.localhost + !!options.tunnel > 1) {\n    throw CommandError(\n      'BAD_ARGS',\n      'Specify at most one of --host, --tunnel, --lan, and --localhost'\n    );\n  }\n\n  if (options.host) {\n    opts.hostType = options.host;\n  } else if (options.tunnel) {\n    opts.hostType = 'tunnel';\n  } else if (options.lan) {\n    opts.hostType = 'lan';\n  } else if (options.localhost) {\n    opts.hostType = 'localhost';\n  } else {\n    opts.hostType = 'lan';\n  }\n\n  let rawArgs = options.parent.rawArgs;\n  if (hasBooleanArg(rawArgs, 'dev')) {\n    opts.dev = getBooleanArg(rawArgs, 'dev');\n  }\n  if (hasBooleanArg(rawArgs, 'minify')) {\n    opts.minify = getBooleanArg(rawArgs, 'minify');\n  }\n\n  await ProjectSettings.setAsync(projectDir, opts);\n\n  return opts;\n}\n\nfunction printQRCode(url) {\n  qrcodeTerminal.generate(url, code => console.log(`${indentString(code, 2)}\\n`));\n}\n\nasync function handleMobileOptsAsync(projectDir, options) {\n  if (options.android) {\n    await Android.openProjectAsync(projectDir);\n  }\n\n  if (options.ios) {\n    await Simulator.openProjectAsync(projectDir);\n  }\n\n  return !!options.android || !!options.ios;\n}\n\nexport default {\n  addOptions,\n  handleMobileOptsAsync,\n  printQRCode,\n  optsAsync,\n};\n"],"sourceRoot":"/exp@57.2.1/src"}