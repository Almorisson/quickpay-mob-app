{"version":3,"sources":["commands/install.js"],"names":["program","command","description","asyncAction","upgradeExpoAsync"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;kBAEe,UAACA,OAAD,EAAkB;AAC/BA,UACGC,OADH,CACW,aADX,EAEGC,WAFH,CAEe,oEAFf,EAGGC,WAHH,gIAGe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD,gCAAUC,gBAAV,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAET,+CAAI,OAAJ;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHf,IAOK,IAPL;;AASAJ,UACGC,OADH,CACW,iBADX,EAEGC,WAFH,CAGI,yFAHJ,EAKGC,WALH,gIAKe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD,8BAAQC,gBAAR,EADC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAET,+CAAI,OAAJ;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALf,IASK,IATL;AAUD,C","file":"../../commands/install.js","sourcesContent":["/**\n * @flow\n */\n\nimport { Android, Simulator } from 'xdl';\nimport log from '../log';\n\nexport default (program: any) => {\n  program\n    .command('install:ios')\n    .description('Install the latest version of Expo Client for iOS on the simulator')\n    .asyncAction(async () => {\n      if (await Simulator.upgradeExpoAsync()) {\n        log('Done!');\n      }\n    }, true);\n\n  program\n    .command('install:android')\n    .description(\n      'Install the latest version of Expo Client for Android on a connected device or emulator'\n    )\n    .asyncAction(async () => {\n      if (await Android.upgradeExpoAsync()) {\n        log('Done!');\n      }\n    }, true);\n};\n"],"sourceRoot":"/exp@57.2.1/src"}