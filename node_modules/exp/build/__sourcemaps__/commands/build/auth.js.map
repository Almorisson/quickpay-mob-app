{"version":3,"sources":["commands/build/auth.js"],"names":["creds","spawnAndCollectJSONOutputAsync","FASTLANE","validate_apple_credentials","appleId","password","getTeamsAttempt","result","reason","rawDump","findCommonFastlaneErrors","Error","teams","length","NO_TEAM_ID","teamId","team","teamName","name","type","teamChoices","map","i","forEach","console","log","choice","message","choices","answers","chosenTeam","indexOf","validateCredentialsProduceTeamId","DEBUG","warn","APPLE_ERRORS","process","platform","match","version","username","split","access","WSL_BASH","constants","F_OK","ENABLE_WSL","prepareLocalAuth","metadata","args","bundleIdentifier","experienceName","app_management","revokeProvisioningProfile","distOrPush","isEnterprise","dumpExistingCertsAttempt","certs","trimmedOneLiners","s","trim","replace","join","revokeTheseCerts","certIds","slice","askWhichCertsToDump","ids","push","revokeCredentialsOnApple","program","prgm","cmd","race","resolve","reject","setTimeout","timeout_msg","TIMEOUT","jsonContent","WSL_ONLY_PATH","windowsToWSLPath","child","spawn","opts","wrapped","e","stdout","on","d","toString","stderr","Buffer","concat","JSON","parse","createAppOnPortal","ensureAppIdLocally","produceProvisionProfile","producePushCerts","produceCerts","require","NO_BUNDLE_ID","MULTIPLE_PROFILES","env","EXPO_DEBUG","doesFileProvidedExist","printOut","p12Path","stat","stats","isFile","doFastlaneActionsExist","all","action","path","doesExist","appStoreAction","credentials","distCertSerialNumber","fetch_new_provisioning_profile","fetch_push_cert","fetch_cert","lines","firstLineRaw","maybeJSON","maybeObject","attempt","isError","includes","authType","noSlashes","p","MINUTES","stdio"],"mappings":"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","file":"../../../commands/build/auth.js","sourcesContent":["// Getting an undefined anywhere here probably means a ruby script is throwing an exception\nimport child_process from 'child_process';\nimport slash from 'slash';\nimport fs from 'fs-extra';\nimport { release, userInfo } from 'os';\nimport _ from 'lodash';\n\nimport prompt from '../../prompt';\nimport log from '../../log';\n\nconst FASTLANE =\n  process.platform === 'darwin'\n    ? require('@expo/traveling-fastlane-darwin')()\n    : require('@expo/traveling-fastlane-linux')();\n\nconst WSL_BASH = 'C:\\\\Windows\\\\system32\\\\bash.exe';\n\nconst WSL_ONLY_PATH = 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin';\n\nexport const NO_BUNDLE_ID = 'App could not be found for bundle id';\n\nexport const APPLE_ERRORS = `If you get errors about\n\n'Maximum number of certificates generated' or 'duplicate profiles'\n\nthen consider using the flags --revoke-apple-dist-certs, --revoke-apple-push-certs,\nand --revoke-apple-provisioning-profile or go to developer.apple.com\nand revoke those credentials manually\n`;\n\nexport const MULTIPLE_PROFILES = 'Multiple profiles found with the name';\n\nexport const DEBUG = process.env.EXPO_DEBUG && process.env.EXPO_DEBUG === 'true';\n\nconst ENABLE_WSL = `\nDoes not seem like WSL enabled on this machine. Download from the Windows app\nstore a distribution of Linux, then in an admin powershell, please run:\n\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n\nand run the new Linux installation at least once\n`;\n\nexport const doesFileProvidedExist = async (printOut, p12Path) => {\n  try {\n    const stats = await fs.stat(p12Path);\n    return stats.isFile();\n  } catch (e) {\n    if (printOut) {\n      console.log('\\nFile does not exist.');\n    }\n    return false;\n  }\n};\n\nexport const doFastlaneActionsExist = async () => {\n  return Promise.all(\n    Object.keys(FASTLANE).map(async action => {\n      let path = FASTLANE[action];\n      return { action, path, doesExist: await doesFileProvidedExist(false, path) };\n    })\n  );\n};\n\nfunction appStoreAction(creds, metadata, teamId, action) {\n  const args = [\n    action,\n    creds.appleId,\n    creds.password,\n    teamId,\n    metadata.bundleIdentifier,\n    metadata.experienceName,\n    '[]',\n    'false',\n  ];\n  return spawnAndCollectJSONOutputAsync(FASTLANE.app_management, args);\n}\n\nexport function createAppOnPortal(creds, metadata, teamId) {\n  return appStoreAction(creds, metadata, teamId, 'create');\n}\n\nexport function ensureAppIdLocally(creds, metadata, teamId) {\n  return appStoreAction(creds, metadata, teamId, 'verify');\n}\n\nexport function produceProvisionProfile(\n  credentials,\n  { bundleIdentifier, distCertSerialNumber },\n  teamId,\n  isEnterprise\n) {\n  return spawnAndCollectJSONOutputAsync(FASTLANE.fetch_new_provisioning_profile, [\n    credentials.appleId,\n    credentials.password,\n    bundleIdentifier,\n    teamId,\n    distCertSerialNumber || '__last__',\n    isEnterprise,\n  ]);\n}\n\nexport function producePushCerts(credentials, { bundleIdentifier }, teamId, isEnterprise) {\n  return spawnAndCollectJSONOutputAsync(FASTLANE.fetch_push_cert, [\n    credentials.appleId,\n    credentials.password,\n    bundleIdentifier,\n    teamId,\n    isEnterprise,\n  ]);\n}\n\nexport function produceCerts(credentials, teamId, isEnterprise) {\n  return spawnAndCollectJSONOutputAsync(FASTLANE.fetch_cert, [\n    credentials.appleId,\n    credentials.password,\n    teamId,\n    isEnterprise,\n  ]);\n}\n\nconst NO_TEAM_ID = `You have no team ID associated with your apple account, cannot proceed.\n(Do you have a paid Apple developer Account?)`;\n\nexport async function validateCredentialsProduceTeamId(creds) {\n  const getTeamsAttempt = await spawnAndCollectJSONOutputAsync(\n    FASTLANE.validate_apple_credentials,\n    [creds.appleId, creds.password]\n  );\n  if (getTeamsAttempt.result === 'failure') {\n    const { reason, rawDump } = getTeamsAttempt;\n    // TODO: remove this after upgrading fastlane in @expo/traveling-fastlane-*\n    findCommonFastlaneErrors(rawDump);\n    throw new Error(`Reason:${reason}, raw:${JSON.stringify(rawDump)}`);\n  }\n  const { teams } = getTeamsAttempt;\n  if (teams.length === 0) {\n    throw new Error(NO_TEAM_ID);\n  }\n  if (teams.length === 1) {\n    log(`Only 1 team associated with your account, using Team ID: ${teams[0].teamId}`);\n    const [team] = teams;\n    return {\n      teamId: team.teamId,\n      teamName: `${team.name} (${team.type})`,\n    };\n  } else {\n    log(`You have ${teams.length} teams`);\n    const teamChoices = teams.map(\n      (team, i) => `${i + 1}) ${team['teamId']} \"${team['name']}\" (${team['type']})`\n    );\n    teamChoices.forEach(choice => console.log(choice));\n    const answers = await prompt({\n      type: 'list',\n      name: 'choice',\n      message: `Which Team ID to use?`,\n      choices: teamChoices,\n    });\n    const chosenTeam = teams[teamChoices.indexOf(answers.choice)];\n    return {\n      teamId: chosenTeam.teamId,\n      teamName: `${chosenTeam.name} (${chosenTeam.type})`,\n    };\n  }\n}\n\n// TODO: remove this after upgrading fastlane in @expo/traveling-fastlane-*\nconst findCommonFastlaneErrors = message => {\n  if (message) {\n    const lines = message.split('\\n');\n    const firstLineRaw = lines[0];\n    // converting ruby hash to json\n    const maybeJSON = firstLineRaw.replace(/=>/g, ':');\n    const maybeObject = _.attempt(JSON.parse, maybeJSON);\n    if (\n      !_.isError(maybeObject) &&\n      _.includes(['sa', 'hsa', 'non-sa', 'hsa2'], maybeObject.authType)\n    ) {\n      throw new Error(\n        \"Need to acknowledge to Apple's Apple ID and Privacy statement. Please manually log into https://appleid.apple.com (or https://itunesconnect.apple.com) to acknowledge the statement.\"\n      );\n    }\n  }\n};\n\nconst windowsToWSLPath = p => {\n  const noSlashes = slash(p);\n  return noSlashes.slice(2, noSlashes.length);\n};\n\nconst MINUTES = 10;\n\nconst TIMEOUT = 60 * 1000 * MINUTES;\n\nconst timeout_msg = (prgm, args) =>\n  process.platform === 'win32'\n    ? `Took too long (limit is ${MINUTES} minutes) to execute ${prgm} ${args.join(' ')}.\nIs your WSL working? in Powershell try: bash.exe -c 'uname'`\n    : `Took too long (limit is ${MINUTES} minutes) to execute ${prgm} ${args.join(' ')}`;\n\nconst opts = { stdio: ['inherit', 'pipe', 'pipe'] };\n\nexport async function prepareLocalAuth() {\n  if (DEBUG) {\n    log.warn(APPLE_ERRORS);\n  }\n\n  if (process.platform === 'win32') {\n    const [version] = release().match(/\\d./);\n    if (version !== '10') {\n      log.warn('Must be on at least Windows version 10 for WSL support to work');\n    }\n    const { username } = userInfo();\n    if (username && username.split(' ').length !== 1) {\n      log.warn('Your username should not have empty space in it, exp might fail');\n    }\n    // Does bash.exe exist?\n    try {\n      await fs.access(WSL_BASH, fs.constants.F_OK);\n    } catch (e) {\n      log.warn(ENABLE_WSL);\n    }\n  }\n}\n\ntype appManagementAction =\n  | 'create'\n  | 'verify'\n  | 'revokeCerts'\n  | 'dumpDistCert'\n  | 'dumpPushCert'\n  | 'revokeProvisioningProfile';\n\nexport async function revokeProvisioningProfile(creds, metadata, teamId) {\n  const args = [\n    ('revokeProvisioningProfile': appManagementAction),\n    creds.appleId,\n    creds.password,\n    teamId,\n    metadata.bundleIdentifier,\n    metadata.experienceName,\n    '[]',\n    'false',\n  ];\n  return spawnAndCollectJSONOutputAsync(FASTLANE.app_management, args);\n}\n\nexport async function askWhichCertsToDump(creds, metadata, teamId, distOrPush, isEnterprise) {\n  const args = [\n    (distOrPush === 'distCert' && 'dumpDistCert') || (distOrPush === 'pushCert' && 'dumpPushCert'),\n    creds.appleId,\n    creds.password,\n    teamId,\n    metadata.bundleIdentifier,\n    metadata.experienceName,\n    '[]',\n    isEnterprise ? 'true' : 'false',\n  ];\n  const dumpExistingCertsAttempt = await spawnAndCollectJSONOutputAsync(\n    FASTLANE.app_management,\n    args\n  );\n  if (dumpExistingCertsAttempt.result === 'success') {\n    const { certs } = dumpExistingCertsAttempt;\n    const trimmedOneLiners = certs.map(s =>\n      s\n        .split('\\n')\n        .map(i => i.trim().replace(',', ''))\n        .join(' ')\n    );\n    if (trimmedOneLiners.length === 0) {\n      log.warn('No certs on developer.apple.com available to revoke');\n      return [];\n    }\n    const { revokeTheseCerts } = await prompt({\n      type: 'checkbox',\n      name: 'revokeTheseCerts',\n      message: `Which Certs to revoke?`,\n      choices: trimmedOneLiners,\n    });\n    const certIds = revokeTheseCerts\n      .map(s => trimmedOneLiners[trimmedOneLiners.indexOf(s)])\n      .map(s => s.split(' ')[1].split('=')[1])\n      .map(s => s.slice(1, s.length - 1));\n    return certIds;\n  } else {\n    log.warn(\n      `Unable to dump existing Apple Developer files: ${JSON.stringify(\n        dumpExistingCertsAttempt.reason\n      )}`\n    );\n    return [];\n  }\n}\n\nexport async function revokeCredentialsOnApple(creds, metadata, ids, teamId) {\n  const args = [\n    ('revokeCerts': appManagementAction),\n    creds.appleId,\n    creds.password,\n    teamId,\n    metadata.bundleIdentifier,\n    metadata.experienceName,\n  ];\n  if (process.platform === 'win32') {\n    args.push(ids.length === 0 ? '[]' : `[${ids.map(i => `\\\\\"${i}\\\\\"`).join(',')}]`);\n  } else {\n    args.push(ids.length === 0 ? '[]' : `[${ids.map(i => `\"${i}\"`).join(',')}]`);\n  }\n\n  return spawnAndCollectJSONOutputAsync(FASTLANE.app_management, args);\n}\n\nasync function spawnAndCollectJSONOutputAsync(program, args) {\n  let prgm = program;\n  let cmd = args;\n  return Promise.race([\n    new Promise((resolve, reject) => {\n      setTimeout(() => reject(new Error(timeout_msg(prgm, cmd))), TIMEOUT);\n    }),\n    new Promise((resolve, reject) => {\n      const jsonContent = [];\n      try {\n        if (process.platform === 'win32') {\n          prgm = WSL_BASH;\n          cmd = ['-c', `${WSL_ONLY_PATH} /mnt/c${windowsToWSLPath(program)} \"${args.join(' ')}\"`];\n          if (DEBUG) {\n            log.warn(`Running: bash.exe ${cmd.join(' ')}`);\n          }\n          var child = child_process.spawn(prgm, cmd, opts);\n        } else {\n          const wrapped = [`${cmd.join(' ')}`];\n          var child = child_process.spawn(prgm, wrapped, opts);\n        }\n      } catch (e) {\n        return reject(e);\n      }\n      child.stdout.on('data', d => console.log(d.toString()));\n      // This is where we get our replies back from the ruby code\n      child.stderr.on('data', d => jsonContent.push(d));\n      child.stdout.on('end', () => {\n        const rawDump = Buffer.concat(jsonContent).toString();\n        try {\n          resolve(JSON.parse(rawDump));\n        } catch (e) {\n          reject({\n            result: 'failure',\n            reason: 'Could not understand JSON reply from Ruby based local auth scripts',\n            rawDump,\n          });\n        }\n      });\n    }),\n  ]);\n}\n"],"sourceRoot":"/exp@57.2.1/src"}