{"version":3,"sources":["commands/send.js"],"names":["projectDir","options","optsAsync","constructManifestUrlAsync","url","underline","raw","shouldQuit","handleMobileOptsAsync","sendTo","recipient","getAsync","askForSendToAsync","sendUrlAsync","gray","process","exit","action","program","command","description","option","urlOpts","asyncActionProjectDir"],"mappings":";;;;;;;;;;;;;;;;;;;4IASA,iBAAsBA,UAAtB,EAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,sCAAQC,SAAR,CAAkBF,UAAlB,EAA8BC,OAA9B,CADR;;AAAA;AAAA;AAAA,mBAGkB,+BAASE,yBAAT,CAAmCH,UAAnC,CAHlB;;AAAA;AAGMI,eAHN;;;AAKE,+CAAI,oBAAoB,kCAAMC,SAAN,CAAgBD,GAAhB,CAApB,GAA2C,IAA/C;AACA,0CAAIE,GAAJ,CAAQF,GAAR;;AAEIG,sBARN,GAQmB,KARnB;AAAA;AAAA,mBASY,sCAAQC,qBAAR,CAA8BR,UAA9B,EAA0CC,OAA1C,CATZ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUIM,yBAAa,IAAb;;AAVJ;AAAA,iBAaMA,UAbN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAkBM,OAAON,QAAQQ,MAAf,KAA0B,SAlBhC;AAAA;AAAA;AAAA;;AAmBIC,wBAAYT,QAAQQ,MAApB;AAnBJ;AAAA;;AAAA;AAAA;AAAA,mBAqBsB,mCAAaE,QAAb,CAAsB,QAAtB,EAAgC,IAAhC,CArBtB;;AAAA;AAqBID,qBArBJ;;AAAA;AAAA,gBAwBOA,SAxBP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAyBsB,sCAAQE,iBAAR,EAzBtB;;AAAA;AAyBIF,qBAzBJ;;AAAA;AAAA,iBA4BMA,SA5BN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA6BU,oCAAOG,YAAP,CAAoBT,GAApB,EAAyBM,SAAzB,CA7BV;;AAAA;AAAA;AAAA;;AAAA;AA+BI,0CAAII,IAAJ,CAAS,gEAAT;;AA/BJ;;AAkCEC,oBAAQC,IAAR;;AAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,M;;;;;;;AATf;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;kBAuCe,mBAAW;AACxBC,UACGC,OADH,CACW,oBADX,EAEGC,WAFH,CAEe,kEAFf;AAGE;AAHF,GAIGC,MAJH,CAKI,uBALJ,EAMI,mEANJ,EAQGC,OARH,GASGC,qBATH,CASyBN,MATzB;AAUD,C","file":"../../commands/send.js","sourcesContent":["import chalk from 'chalk';\n\nimport { UserSettings, UrlUtils } from 'xdl';\n\nimport askUser from '../askUser';\nimport log from '../log';\nimport sendTo from '../sendTo';\nimport urlOpts from '../urlOpts';\n\nasync function action(projectDir, options) {\n  await urlOpts.optsAsync(projectDir, options);\n\n  let url = await UrlUtils.constructManifestUrlAsync(projectDir);\n\n  log('Your URL is\\n\\n' + chalk.underline(url) + '\\n');\n  log.raw(url);\n\n  let shouldQuit = false;\n  if (await urlOpts.handleMobileOptsAsync(projectDir, options)) {\n    shouldQuit = true;\n  }\n\n  if (shouldQuit) {\n    return;\n  }\n\n  var recipient;\n  if (typeof options.sendTo !== 'boolean') {\n    recipient = options.sendTo;\n  } else {\n    recipient = await UserSettings.getAsync('sendTo', null);\n  }\n\n  if (!recipient) {\n    recipient = await askUser.askForSendToAsync();\n  }\n\n  if (recipient) {\n    await sendTo.sendUrlAsync(url, recipient);\n  } else {\n    log.gray(\"(Not sending anything because you didn't specify a recipient.)\");\n  }\n\n  process.exit();\n}\n\nexport default program => {\n  program\n    .command('send [project-dir]')\n    .description('Sends a link to your project to a phone number or e-mail address')\n    //.help('You must have the server running for this command to work')\n    .option(\n      '-s, --send-to  [dest]',\n      'Specifies the mobile number or e-mail address to send this URL to'\n    )\n    .urlOpts()\n    .asyncActionProjectDir(action);\n};\n"],"sourceRoot":"/exp@57.2.1/src"}