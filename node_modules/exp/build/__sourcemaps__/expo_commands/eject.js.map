{"version":3,"sources":["expo_commands/eject.js"],"names":["projectDir","options","ejectAsync","action","program","command","description","option","asyncActionProjectDir"],"mappings":";;;;;;;;;;;;;;;;;;AAEA;;4IACA,iBAAsBA,UAAtB,EAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,0BAAMC,UAAN,CAAiBF,UAAjB,EAA6BC,OAA7B,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeE,M;;;;;;;AAHf;AAAA;AAAA;;;;;;kBAOe,mBAAW;AACxBC,UACGC,OADH,CACW,qBADX,EAEGC,WAFH,CAGI,kHAHJ,EAKGC,MALH,CAMI,uBANJ,EAOI,gJAPJ,EASGA,MATH,CAUI,YAVJ,EAWI,yGAXJ,EAaGC,qBAbH,CAayBL,MAbzB,EAaiC,4BAA6B,KAb9D,EAaqE,oBAAqB,IAb1F;AAcD,C","file":"../../expo_commands/eject.js","sourcesContent":["import * as Eject from './eject/Eject';\n\n// Set EXPO_VIEW_DIR to universe/exponent to pull expo view code locally instead of from S3\nasync function action(projectDir, options) {\n  await Eject.ejectAsync(projectDir, options);\n}\n\nexport default program => {\n  program\n    .command('eject [project-dir]')\n    .description(\n      'Creates Xcode and Android Studio projects for your app. Use this if you need to add custom native functionality.'\n    )\n    .option(\n      '--eject-method [type]',\n      'Eject method to use. If not specified, the command will ask which one to use. Required when using the --non-interactive option. expoKit, plain'\n    )\n    .option(\n      '-f --force',\n      'Will attempt to generate an iOS project even when the system is not running macOS. Unsafe and may fail.'\n    )\n    .asyncActionProjectDir(action, /* skipProjectValidation: */ false, /* skipAuthCheck: */ true);\n};\n"],"sourceRoot":"/exp@57.2.1/src"}